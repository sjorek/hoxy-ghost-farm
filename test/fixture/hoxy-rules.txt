# THIS IS AN EXAMPLE FILE THAT CONTAINS EXAMPLE RULES FOR HOXY.
# UNCOMMENT TO ACTIVATE. SEE readme.markdown IN THIS DIR FOR SYNTAX HELP.

# add a visible banner alerting user of proxy
response: if $content-type contains 'html', @banner("currently browsing through a web proxy", "position:fixed", 1)
response: if $content-type contains 'html', @cheerio-script("test/fixture/hoxy-cheerio.js", 1, 1)
response: if $content-type contains 'html', $response-body.replace(/<!DOCTYPE[^>]*>/, '<!DOCTYPE html>')
response: if $content-type contains 'html', $response-body.replace(/\s*<!--([^-]|-[^-])*-->\s*/g, '')
response: if $content-type contains 'html', $response-body.replace(/\n\s*\n\s*/g, '\n\n')
response: if $content-type contains 'html', $response-body.replace(/(([ ]|>|&[a-z]+;)\s+|\s+([ ]|<|&[a-z]+;)|(>)\s+(<))/gi, '$2$3')

#response: if $content-type contains 'html', $response-body.replace(/(http:\/\/(|www\.|en\.)dgb\.de)(:\d+)?/g, '$1.eve:8080')
response: if $content-type contains 'html', $response-body.replace(/(http:\/\/(|www\.|en\.)dgb\.de)(:\d+)?/g, '$1.eve')

response: if $content-type contains 'html', @html-beautify()
#response: if $content-type contains 'css', @css-beautify()
#response: if $content-type contains 'json', @json-beautify()
#response: if $content-type contains 'javascript', @js-beautify()

# rewrite redirects
#response: if $status among [301,302,303,307,308] and $response-headers['location'] contains 'dgb.de', $status.log $url.log $response-headers['location'].replace(/^(https?:\/\/(|www\.|en\.)dgb\.de)([^\/]*(\/|$))/g, '$1.eve:8080$4') $response-headers['location'].log
response: if $status among [301,302,303,307,308] and $response-headers['location'] contains 'dgb.de', $status.log $url.log $response-headers['location'].replace(/^(https?:\/\/(|www\.|en\.)dgb\.de)([^\/]*(\/|$))/g, '$1.eve$4') $response-headers['location'].log

request: if $request-headers['authorization'] contains 'DGB Mobil', $request-headers['authorization'].clear
request: if $request-headers['referer'] contains '.eve', $request-headers['referer'].replace(/^(https?:\/\/([^\.]+\.)?dgb\.de).eve([^\/]*(\/|$))/g,'$1$4')

# log request and responses
response: if $content-type contains 'html', $method.log $url.log $status.log $response-headers['*'].log
request: if $request-headers['accept'] contains 'html', $method.log $url.log $request-headers['*'].log

# use css and js from the staging server
#request: if $ext eq "js" and $host eq "www.example.com", $host.set-to('www-stage.example.com:83')
#request: if $ext eq "css" and $host eq "www.example.com", $host.set-to('www-stage.example.com:83')

#request: @ghost-farm('path/to/farm/root','index.html')

request: @ghost-server('test/fixture/htdocs')

